```

pipeline :

sdlc :
source code (github)>>> build (maven) >> artifact (.jar,war) >> dockerfile  >> docker build (docker custom image) >> containerised app


bot/autonomous system : jenkins : heart of cicd pipeline

workflow : automatic : raman


automate the task whenever any change : jobs in jenkins


-------------------------

creation of jenkin server :


Software Image (AMI)
Ubuntu Server 20.04 LTS (HVM)

Virtual server type (instance type)
t2.micro 

Firewall (security group)
raman-synechron-sg 

Storage (volumes)
1 volume(s) - 20 GiB


```

```


installing jenkins

https://pkg.jenkins.io/debian-stable/


--------------------------------------------


---
 clear
   28  systemctl status jenkins
   29  vi /lib/systemd/system/jenkins.service
   30  systemctl daemon-reload
   31  systemctl restart jenkins




# Unix account that runs the Jenkins daemon
# Be careful when you change this, as you need to update the permissions of
# $JENKINS_HOME, $JENKINS_LOG, and (if you have already run Jenkins)
# $JENKINS_WEBROOT.
User=root
Group=root



-------
```

```

 wget https://dlcdn.apache.org/maven/maven-3/3.9.4/binaries/apache-maven-3.9.4-bin.tar.gz
   42  ls
   43  tar -xvzf apache-maven-3.9.4-bin.tar.gz
   44  ls
   45  cd apache-maven-3.9.4
   46  ls
   47  cd bin/
   48  ls
   49  ./mvn
   50  clear
   51  ls
   52  cd /root/
   53  ls
   54  mvn
   55  ./root/apache-maven-3.9.4/bin/mvn
   56  clear
   57  ls
   58  cd apache-maven-3.9.4
   59  ls
   60  cd bin/
   61  ls
   62  cd /usr/bin/
   63  ls
   64  ls ls
   65  cat ls
   66  clear
   67  ls
   68  ls mkdir
   69  cd /root/
   70  ls
   71  cd apache-maven-3.9.4
   72  ls
   73  cd bin/
   74  ls
   75  ln -s /root/apache-maven-3.9.4/bin/mvn  /usr/bin/
   76  ls mvn
   77  ls -ltr mvn
   78  cd /usr/bin/
   79  ls -ltr mvn
   80  clear
   81  cd /root/
   82  ls
   83  mvn

```


```

========================

docker installlation :

https://docs.docker.com/engine/install/ubuntu/#prerequisites

----
docker -v
  110  docker ps
  111  clear
  112  docker run -dit --name c1 centos:7
  113  docker ps


```

```

-------


use maven to clean the previous builds and  package the war file 
mvn clean
mvn package

check the outputs in target directory structure and war file with name devops.war

build the docker image with docker build command ( you can see dockerfile in present working directory)
docker build -t image-name:version .

docker rm -f `docker ps -aq`

Run a container from the image
docker run -d -p 8081:8080 --name mynewcontainer image-name:version    {8080 port is taken by jenkins}

Check your system IP in browser :
IP:8081/raman

```


```


crossverify testing : 

 htop
    2  docker ps
    3  clear
    4  cd /var/lib/
    5  ls
    6  cd jenkins/
    7  ls
    8  cd workspace/
    9  ls
   10  cd p1-freestyle/
   11  ls
   12  cd target/
   13  ls
   14  docker ps
   15  docker exec -it ba5e5298d606 -- /bin/bash
   16  docker exec -it ba5e5298d606 /bin/bash
   17  history



root@ba5e5298d606:/usr/local/tomcat/webapps# history
    1  ls
    2  cd webapps
    3  ls
    4  history


```
